service: serverless-ci-cd

provider:
  name: aws
  runtime: nodejs6.10 # AWS Lambda supports v.4.3.2 and v.6.10.3

# Overwrite defaults
  memorySize: 512 # overwrite default memory of 1024
  versionFunctions: false # don't create a new function version with each deploy
  region: us-west-2 # override default region us-east-1

# Service-wide environment variables
  environment:
    STAGE: ${opt:stage}

# Add statements to the Lambda function's IAM Role
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Scan
        - dynamodb:Query
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-west-2:*:*"

# Define our lambda functions and the events they respond to
functions:
  listTodos:
    handler: todos/handler.list
    events:
      - http:
          path: todos
          method: get
  postTodos:
    handler: todos/handler.post
    events:
      - http:
          path: todos
          method: post

# Define CloudFormation resource templates here
resources:
  Resources:
    TodosDB:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: 'Todos-${opt:stage}'
        # here we define the primary key of the table.
        AttributeDefinitions:
          -
            AttributeName: 'id'
            AttributeType: S
        KeySchema:
          -
            AttributeName: 'id'
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: '1'
          WriteCapacityUnits: '1'

custom:
  dynamodb:
    start:
      port: 8000
      # uncomment for already-running local DynamoDB
      # noStart: true
  output:
    file: .build/stack.json # where stack output should be stored by the serverless-stack-output plugin

plugins:
  - serverless-dynamodb-local # use this with serverless-offline to create local dev environment
  - serverless-offline
  - serverless-stack-output # store stack output in a file
